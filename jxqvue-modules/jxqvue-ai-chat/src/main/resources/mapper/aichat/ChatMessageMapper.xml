<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxqvue.aichat.mapper.ChatMessageMapper">
    
    <resultMap type="ChatMessage" id="ChatMessageResult">
        <result property="messageId"    column="message_id"    />
        <result property="sessionId"    column="session_id"    />
        <result property="role"    column="role"    />
        <result property="content"    column="content"    />
        <result property="status"    column="status"    />
        <result property="messageType"    column="message_type"    />
        <result property="isRead"    column="is_read"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectChatMessageVo">
        select message_id, session_id, role, content, status, message_type, is_read, create_by, create_time, update_by, update_time, remark from ai_chat_message
    </sql>

    <select id="selectChatMessageList" parameterType="ChatMessage" resultMap="ChatMessageResult">
        <include refid="selectChatMessageVo"/>
        <where>  
            <if test="sessionId != null "> and session_id = #{sessionId}</if>
            <if test="role != null  and role != ''"> and role = #{role}</if>
            <if test="content != null  and content != ''"> and content like concat('%', #{content}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="messageType != null  and messageType != ''"> and message_type = #{messageType}</if>
            <if test="isRead != null  and isRead != ''"> and is_read = #{isRead}</if>
        </where>
        order by create_time asc
    </select>
    
    <select id="selectChatMessageByMessageId" parameterType="Long" resultMap="ChatMessageResult">
        <include refid="selectChatMessageVo"/>
        where message_id = #{messageId}
    </select>

    <select id="selectChatMessageListBySessionId" parameterType="Long" resultMap="ChatMessageResult">
        <include refid="selectChatMessageVo"/>
        where session_id = #{sessionId} and status = '0'
        order by create_time asc
    </select>

    <select id="selectLatestChatMessages" resultMap="ChatMessageResult">
        <include refid="selectChatMessageVo"/>
        where session_id = #{sessionId} and status = '0'
        order by create_time desc
        limit #{limit}
    </select>

    <select id="selectUnreadCountBySessionId" parameterType="Long" resultType="int">
        select count(*) from ai_chat_message 
        where session_id = #{sessionId} and status = '0' and is_read = '0' and role = 'assistant'
    </select>
        
    <insert id="insertChatMessage" parameterType="ChatMessage" useGeneratedKeys="true" keyProperty="messageId">
        insert into ai_chat_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sessionId != null">session_id,</if>
            <if test="role != null and role != ''">role,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="status != null">status,</if>
            <if test="messageType != null and messageType != ''">message_type,</if>
            <if test="isRead != null">is_read,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sessionId != null">#{sessionId},</if>
            <if test="role != null and role != ''">#{role},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="status != null">#{status},</if>
            <if test="messageType != null and messageType != ''">#{messageType},</if>
            <if test="isRead != null">#{isRead},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateChatMessage" parameterType="ChatMessage">
        update ai_chat_message
        <trim prefix="SET" suffixOverrides=",">
            <if test="sessionId != null">session_id = #{sessionId},</if>
            <if test="role != null and role != ''">role = #{role},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="status != null">status = #{status},</if>
            <if test="messageType != null and messageType != ''">message_type = #{messageType},</if>
            <if test="isRead != null">is_read = #{isRead},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where message_id = #{messageId}
    </update>

    <update id="markAsRead" parameterType="Long">
        update ai_chat_message set is_read = '1' where message_id = #{messageId}
    </update>

    <update id="markAsReadBatch" parameterType="Long">
        update ai_chat_message set is_read = '1' where message_id in 
        <foreach item="messageId" collection="array" open="(" separator="," close=")">
            #{messageId}
        </foreach>
    </update>

    <delete id="deleteChatMessageByMessageId" parameterType="Long">
        update ai_chat_message set status = '1' where message_id = #{messageId}
    </delete>

    <delete id="deleteChatMessageByMessageIds" parameterType="String">
        update ai_chat_message set status = '1' where message_id in 
        <foreach item="messageId" collection="array" open="(" separator="," close=")">
            #{messageId}
        </foreach>
    </delete>
</mapper>
